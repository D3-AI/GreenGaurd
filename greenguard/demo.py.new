import os
import random
from datetime import datetime, timedelta

import pandas as pd


def get_turbine_df(start, end, interval, signals):
    data = list()
    current = start
    delta = timedelta(seconds=interval)
    while current < end:
        for signal in signals:
            data.append({
                'timestamp': current.strftime('%m/%d/%y %H:%M:%S'),
                'signal_id': signal,
                'value': random.random()
            })

        current = current + delta

    return pd.DataFrame(data)[['timestamp', 'signal_id', 'value']]


def generate_turbine_files(data_path, turbine_name, signals, interval):
    turbine_path = os.path.join(data_path, turbine_name)
    os.makedirs(turbine_path, exist_ok=True)

    for year in range(2000, 2011):
        for month in range(1, 13):
            start = datetime(year, month, 1)
            end = datetime(year + (1 if month == 12 else 0), (month % 12) + 1, 1)
            tdf = get_turbine_df(start, end, interval, signals)

            csv_path = os.path.join(turbine_path, '{}-{:02d}-.csv'.format(year, month))
            tdf.to_csv(csv_path)

def _prefixed_range(prefix, size):
    arr = pd.Series(np.arange(size) + 1).astype(str)
    arr = arr.str.zfill(arr.str.len().max())

    return prefix + arr


def make_demo(path='.', signals=1, turbines=1, interval=600):
    signals = _prefixed_range('S', signals)
    turbines = _prefixed_range('S', turbines)
    readings_path = os.path.join(path, readings)

    for turbine in turbines:
        generate_turbine_files(readings_path, turbine, signals, interval)


    target_times = pd.DataFrame([
        {'turbine_id': 'T001', 'cutoff_time': datetime(2005, 1, 1), 'target': False},
        {'turbine_id': 'T001', 'cutoff_time': datetime(2007, 1, 2), 'target': True},
        {'turbine_id': 'T001', 'cutoff_time': datetime(2009, 1, 2), 'target': False},
        {'turbine_id': 'T002', 'cutoff_time': datetime(2005, 1, 1), 'target': True},
        {'turbine_id': 'T002', 'cutoff_time': datetime(2007, 1, 2), 'target': False},
        {'turbine_id': 'T002', 'cutoff_time': datetime(2009, 1, 2), 'target': True},
        {'turbine_id': 'T003', 'cutoff_time': datetime(2005, 1, 1), 'target': False},
        {'turbine_id': 'T003', 'cutoff_time': datetime(2007, 1, 2), 'target': True},
        {'turbine_id': 'T003', 'cutoff_time': datetime(2009, 1, 2), 'target': False},
    ])

    target_times.to_csv('target_times.csv', index=False)
